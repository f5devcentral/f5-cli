image: python:3.7

stages:
    - test
    - publish

# unit tests: python 3.x (preferred)
test_unit:
    stage: test
    script:
        # install packages
        - pip3 install -r requirements.txt
        - pip3 install .
        # run unit tests
        - make unit_test
        # run linter
        - make lint
    tags:
        - cm-official-docker-executor
    artifacts:
        name: ${CI_COMMIT_REF_NAME}_unit_test
        paths:
            - code_coverage

# unit tests: python 2.x
test_unit_python_2_x:
    image: python:2.7
    stage: test
    script:
        # install packages
        - pip install -r requirements.txt
        - pip install .
        # run unit tests
        - make unit_test
    tags:
        - cm-official-docker-executor

# Publish to internal artifactory
# Note: Will push when new tags are pushed and use the current build in dist directory
# with the assumption being the package has been updated. However even if it hasn't the upload
# will simply update the existing rpm version/release in artifactory
# push:
#     stage: push
#     only:
#         - tags
#     tags:
#         - docker-executor
#     script:
#         - EGG_FILE=$(ls dist/*.gz)
#         - EGG_NAME=$(basename $EGG_FILE)
#         - URL=${ARTIFACTORY_BASE_URL}/f5-pypi-internal/${EGG_NAME}
#         - echo ${URL}
#         - >-
#           UPLOAD_RESULT=$(curl -H "Authorization: Bearer ${ARTIFACTORY_TOKEN}" -X PUT --data-binary @${EGG_FILE} ${URL})
#         - if [[ $? -eq 0 ]] && [[ "$UPLOAD_RESULT" == *created* ]]; then echo "Upload complete"; else echo "Upload failed"; exit 1; fi
#         - echo $UPLOAD_RESULT

# publish docs to internal pages: - this job MUST be named 'pages'
pages:
    stage: publish
    environment:
        name: staging
        url: https://${CI_PROJECT_NAMESPACE}.${PAGES_DOMAIN}/${CI_PROJECT_NAME}
    tags:
        - cm-official-docker-executor
    script:
        # make public dir + any child dir
        - mkdir -p ./public/coverage
        # place code coverage artifacts under /coverage
        - cp -R code_coverage/* ./public/coverage
        # etc...
    artifacts:
        paths:
            - public
